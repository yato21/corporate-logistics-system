services:
  postgres:
    image: postgres:14
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD:-12345}
      POSTGRES_USER: ${DB_USER:-postgres}
      POSTGRES_DB: ${DB_NAME:-transport_management}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: node_backend
    restart: always
    depends_on:
      - postgres
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-12345}
      - DB_NAME=${DB_NAME:-transport_management}   
      - PORT=5000                        
      - JWT_SECRET=${JWT_SECRET:-your_jwt_secret_key}
    networks:
      - app_network
    volumes:
      - server_uploads:/app/uploads

  client:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=/api
        - REACT_APP_SOCKET_URL=/
    container_name: react_frontend
    restart: always
    depends_on:
      - server
    networks:
      - app_network
    ports:
      - "80:80"

networks:  
  app_network:
    driver: bridge

volumes:
  postgres_data:
  server_uploads: 